{"version":3,"sources":["webpack:///./src/templates/allTagsIndex.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","AllTagsIndex","_ref","data","tags","pageContext","a","createElement","style","display","flexDirection","alignItems","fontFamily","map","tagName","index","key","to","m","module","exports","require","default","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KA4BeO,UAzBM,SAAAC,GAA2BA,EAAxBC,KAAwB,IACtCC,EADsCF,EAAlBG,YACpBD,KACR,OACEN,EAAAQ,EAAAC,cAAA,WACET,EAAAQ,EAAAC,cAAA,OACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,WAAY,WAGdd,EAAAQ,EAAAC,cAAA,8CACCH,EAAKS,IAAI,SAACC,EAASC,GAClB,OACEjB,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAMgB,IAAKD,EAAOE,GAAE,SAAWH,GAC7BhB,EAAAQ,EAAAC,cAAA,UAAKO,8BCnBnB,IAAsBI,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CxB,EAAA6B,EAAA3B,EAAA,sBAAA4B,IAAA,IAAA3B,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAA4B,EAAA/B,EAAA,GAAAgC,EAAAhC,EAAAK,EAAA0B,GAAAE,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAAK,EAAA4B,GAAAjC,EAAA6B,EAAA3B,EAAA,sBAAAgC,EAAAtB,IAAAZ,EAAA,SAYMmC,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBlC,EAAAQ,EAAAC,cAACsB,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM7B,MACL+B,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOhC,MAEtD6B,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAM7B,KAAO6B,EAAM7B,KAAKA,KAAO+B,EAAgBF,EAAMG,OAAOhC,MAGvDL,EAAAQ,EAAAC,cAAA,uCA4BfiB,EAAYc,UAAY,CACtBnC,KAAMoC,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,wGCnDhBC,EAAmB,SAAA1C,GAAkB,IAAf2C,EAAe3C,EAAf2C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOnB,IAAMvB,cAAc2C,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-templates-all-tags-index-js-dfb815286ebeed8019f6.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nconst AllTagsIndex = ({ data, pageContext }) => {\r\n  const { tags } = pageContext\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          fontFamily: \"avenir\",\r\n        }}\r\n      >\r\n        <h1>Posts matching with All the tags</h1>\r\n        {tags.map((tagName, index) => {\r\n          return (\r\n            <Link key={index} to={`/tags/${tagName}`}>\r\n              <h3>{tagName}</h3>\r\n            </Link>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllTagsIndex\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}