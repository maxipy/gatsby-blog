{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Header__WEBPACK_IMPORTED_MODULE_2__","Layout","_ref","edges","data","allMarkdownRemark","a","createElement","map","edge","frontmatter","node","style","display","flexDirection","alignItems","fontFamily","key","path","to","title","date","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","TitleAndDescription","site","siteMetadata","description","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","marginBottom","textDecoration","marginTop","opacity","Header","_public_static_d_3501179355_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-79ffb6846056133235b0.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Header from \"../components/Header\"\r\n\r\nconst Layout = ({ data }) => {\r\n  const { edges } = data.allMarkdownRemark\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {edges.map(edge => {\r\n        const { frontmatter } = edge.node\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontFamily: \"avenir\",\r\n            }}\r\n            key={frontmatter.path}\r\n          >\r\n            <Link to={frontmatter.path}>\r\n              <h1>{frontmatter.title}</h1>\r\n            </Link>\r\n            <p>{frontmatter.date}</p>\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          fontFamily: \"avenir\",\r\n        }}\r\n      >\r\n        <Link to={\"/tags\"}>Browse By Tag</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query HomepageQuery {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nconst TitleAndDescription = ({ data }) => {\r\n  const title = data.site.siteMetadata.title\r\n  const description = data.site.siteMetadata.description\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        fontFamily: \"avenir\",\r\n      }}\r\n    >\r\n      <Link to=\"/\">\r\n        <h2 style={{ marginBottom: 0, textDecoration: \"overline\" }}>{title}</h2>\r\n      </Link>\r\n      <p\r\n        style={{\r\n          marginTop: 0,\r\n          opacity: 0.5,\r\n        }}\r\n      >\r\n        {description}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\nconst Header = () => {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          site {\r\n            siteMetadata {\r\n              title\r\n              description\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => <TitleAndDescription data={data} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Header\r\n"],"sourceRoot":""}