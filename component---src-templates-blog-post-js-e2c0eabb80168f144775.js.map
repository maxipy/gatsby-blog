{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Header__WEBPACK_IMPORTED_MODULE_2__","Template","_ref","data","pageContext","next","prev","markdownRemark","title","frontmatter","html","a","createElement","style","display","flexDirection","alignItems","fontFamily","className","dangerouslySetInnerHTML","__html","to","path","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","TitleAndDescription","site","siteMetadata","description","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","marginBottom","textDecoration","marginTop","opacity","Header","_public_static_d_3501179355_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-blog-post-js-e2c0eabb80168f144775.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Header from \"../components/Header\"\r\n\r\nconst Template = ({ data, pageContext }) => {\r\n  const { next, prev } = pageContext\r\n\r\n  const { markdownRemark } = data\r\n  const title = markdownRemark.frontmatter.title\r\n  const html = markdownRemark.html\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        fontFamily: \"avenir\",\r\n      }}\r\n    >\r\n      <Header />\r\n      <h3 style={{ fontFamily: \"avenir\" }}>{title}</h3>\r\n      <div\r\n        className=\"blogpost\"\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n        style={{ fontFamily: \"avenir\" }}\r\n      />\r\n      {next && (\r\n        <Link to={next.frontmatter.path}>\r\n          <pre>Next</pre>\r\n        </Link>\r\n      )}\r\n      {prev && (\r\n        <Link to={prev.frontmatter.path}>\r\n          <pre>Prev</pre>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($pathSlug: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default Template\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nconst TitleAndDescription = ({ data }) => {\r\n  const title = data.site.siteMetadata.title\r\n  const description = data.site.siteMetadata.description\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        fontFamily: \"avenir\",\r\n      }}\r\n    >\r\n      <Link to=\"/\">\r\n        <h2 style={{ marginBottom: 0, textDecoration: \"overline\" }}>{title}</h2>\r\n      </Link>\r\n      <p\r\n        style={{\r\n          marginTop: 0,\r\n          opacity: 0.5,\r\n        }}\r\n      >\r\n        {description}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\nconst Header = () => {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          site {\r\n            siteMetadata {\r\n              title\r\n              description\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => <TitleAndDescription data={data} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Header\r\n"],"sourceRoot":""}